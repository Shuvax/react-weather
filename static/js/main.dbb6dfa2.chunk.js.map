{"version":3,"sources":["Weather.js","App.js","index.js"],"names":["Weather","useState","temperature","setTemperature","unit","setUnit","city","setCity","country","setCountry","description","setDescription","moment","format","date","setDate","time","setTime","humidity","setHumidity","temp_min","setTemp_min","temp_max","setTemp_max","wind","setWind","icon","setIcon","convert","deg","Math","round","className","toLocaleUpperCase","toUpperCase","type","value","onChange","e","target","length","placeholder","onClick","axios","method","url","then","response","data","main","temp","weather","iconName","iconUrl","catch","error","console","log","getWeather","style","width","src","speed","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dbb6dfa2.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport './Weather.css';\r\n\r\n\r\nfunction Weather() {\r\n\r\n    const[temperature, setTemperature] = useState('');\r\n    const[unit, setUnit] = useState('F');\r\n    const[city, setCity] = useState('');\r\n    const[country, setCountry] = useState('');\r\n    const[description, setDescription] = useState('');\r\n    const[date, setDate] = useState(moment().format('MMMM Do YYYY'));\r\n    const[time, setTime] = useState(moment().format('h:mm:ss a'));\r\n    const[humidity, setHumidity] = useState('');\r\n    const[temp_min, setTemp_min] = useState('');\r\n    const[temp_max, setTemp_max] = useState('');\r\n    const[wind, setWind] = useState(null);\r\n    const[icon, setIcon] = useState(null);\r\n\r\n    function convert(deg) {\r\n        let new_degree;\r\n        switch(unit) {\r\n            case 'F':\r\n                new_degree = Math.round(((deg - 273.15) * 1.8) + 32)\r\n                return new_degree\r\n            case 'C':\r\n                new_degree = Math.round(deg - 273.15) \r\n                return new_degree\r\n            default:\r\n                return\r\n        }\r\n    }\r\n\r\n\r\n    const getWeather = (city, country) => {\r\n        axios({\r\n            method: \"GET\",\r\n            url: `https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&APPID=93d64353ca23a1e6ed6abb95e58c335c`\r\n        })\r\n            .then((response) => {\r\n                setTemperature(Math.round(response.data.main.temp))\r\n                setHumidity(response.data.main.humidity)\r\n                setDescription(response.data.weather[0].description)\r\n                setTime(moment().format('h:mm:ss a'))\r\n                setDate(moment().format('MMMM DD YYYY'))\r\n                setTemp_min(Math.round(response.data.main.temp_min));\r\n                setTemp_max(Math.round(response.data.main.temp_max));\r\n                setWind(response.data.wind)\r\n                const iconName = response.data.weather[0].icon;\r\n                const iconUrl = `http://openweathermap.org/img/wn/${iconName}@2x.png`;\r\n                setIcon(iconUrl)\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n    \r\n\r\n    return (\r\n        <div className='main'>\r\n            <div className='time'>\r\n                <h1>{date}</h1>\r\n                <h1>{time}</h1>  \r\n            </div>\r\n\r\n            <div className='section-wrapper'>\r\n                <div className='location'>\r\n                    <h1><p>Weather in</p> {city ? `${city.toLocaleUpperCase()},` : <strong>City,</strong>} {country ? country.toUpperCase() : <strong>Country</strong>}</h1>\r\n                </div>\r\n                \r\n                <div className='inputs-wrapper'>\r\n                    <input \r\n                        className='input input_city'\r\n                        type='text'\r\n                        value={city}\r\n                        onChange={(e) => e.target.value.length < 15 ? setCity(e.target.value) : ''}\r\n                        placeholder='City '\r\n                    />\r\n                    <input \r\n                        className='input input_country'\r\n                        type='text'\r\n                        value={country}\r\n                        onChange = {(e) => e.target.value.length < 15 ? setCountry(e.target.value) : ''}\r\n                        placeholder='Country '\r\n                    />\r\n                    <div><button className='input_button' onClick={() => getWeather(city, country)}>Submit</button></div>\r\n                </div>\r\n\r\n                <div className='curr_weather_icon'>\r\n                    <img style={{width: '80px'}} src={icon} />\r\n                </div>\r\n\r\n                <div className='description_wrapper'>\r\n                    <p>{description}</p>\r\n                </div>\r\n                \r\n                <div className='temp_wrapper'>\r\n                    <h2>Temperature</h2>\r\n                    <p className='temp'>{temperature ? convert(temperature)+'°'+unit : ''}</p>\r\n                    <div className='unit_selector'>\r\n                        <button className='unit_button c' value='C' onClick={() => setUnit('C')}>°C</button>\r\n                        <button className='unit_button f' value='F' onClick={() => setUnit('F')}>°F</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='wind_humid_wrapper'>\r\n                    <div className='humidity_wrapper'>\r\n                        <h2>Humidity</h2>\r\n                        <p>{humidity ? `Humidity: ${humidity}%` : ''}</p>\r\n                    </div>\r\n\r\n                    <div className='wind_wrapper'>\r\n                        <h2>Wind</h2>\r\n                        <p>{wind ? `Wind: ${wind.deg}° ${wind.speed}m/s` : ''}</p>\r\n                    </div>\r\n                </div>      \r\n\r\n                <div className='min_max_wrapper'>\r\n                    <div className='min_wrapper'>\r\n                        <h2>Min</h2>\r\n                        <p>{temp_min ? `${convert(temp_min)}°${unit}` : ''}</p>\r\n                    </div>\r\n                    <div className='max_wrapper'>\r\n                        <h2>Max</h2>\r\n                        <p>{temp_max ? `${convert(temp_max)}°${unit}` : ''}</p>\r\n                    </div>\r\n                </div>       \r\n            </div>   \r\n        </div>     \r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Weather;","import React from 'react';\nimport './App.css';\nimport Weather from './Weather';\n\n\nfunction App() {\n  return (\n    <Weather />\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport './index.css';\n\n\nReactDOM.render(\n  <App />, document.getElementById('root')\n);"],"sourceRoot":""}